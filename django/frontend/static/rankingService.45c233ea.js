var l={sum(s){return Array.isArray(s)&&s.length?s.reduce((r,e)=>r+e):null},participantScore(s,r){return this.sum(s.scorecards.filter(e=>e.round!==r).map(e=>e.score))},participantOrder(s,r){if(s.class<r.class)return-1;if(s.class>r.class)return 1;if(s.shootoff!==null&&r.shootoff!==null){if(s.shootoff>r.shootoff)return-1;if(s.shootoff<r.shootoff)return 1}return s.progress>r.progress?-1:s.progress<r.progress?1:s.sum>r.sum?-1:s.sum<r.sum?1:s.x>r.x?-1:s.x<r.x?1:0},participantRank(s){let r={class:null,ord:1,sum:null,x:null};for(let e of s.sort(this.participantOrder))e.class!==r.class&&(r.class=e.class,r.ord=1,r.place=1,r.sum=e.sum,r.x=e.x),(typeof e.shootoff!="undefined"&&e.shootoff!==null||e.sum<r.sum||e.x<r.x&&r.place>3)&&(r.place=r.ord),e.place=e.progress?r.place:null,r.x=e.x,r.sum=e.sum,r.ord+=1},getClass(s,r){return r&&r.includes(s.age_group+"_"+s.style)||r==="all"?s.age_group+"_"+s.style:s.age_group+s.gender+s.style},longestPrefix(s){let r=s[0];for(let e=1;e<=r.length;e++)if(s.every(t=>t.substring(0,e)===r.substring(0,e))===!1)return r.substring(0,e-1).trim();return r}};export{l as r};
